{"version":3,"sources":["components/footer.js","pages/initial.js","utils/auth.js","utils/queries.js","components/nav.js","utils/mutations.js","pages/main.js","pages/account.js","pages/login.js","pages/matchup.js","pages/signup.js","App.js","index.js"],"names":["Footer","className","href","Init","to","src","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","QUERY_PLAYER","gql","QUERY_MATCHUPS","NavComponent","navigate","useNavigate","Navbar","bg","expand","Container","fluid","Brand","onClick","Toggle","Offcanvas","id","placement","Header","closeButton","Title","Body","Nav","Link","NavDropdown","title","Item","Divider","Auth","logout","CREATE_MATCHUP","CREATE_VOTE","ADD_PROFILE","LOGIN_USER","REMOVE_MATCHUP","Main","useParams","useQuery","variables","_id","data","loading","console","log","matchupList","matchups","useMutation","refetchQueries","createVote","handleVote","error","playNum","loggedIn","length","map","matchup","player1","imageUrl","alt","full_name","team","position","player1_votes","player2","player2_votes","Account","fetchPolicy","removeMatchup","myMatchupList","handleDeleteMatchup","Error","type","Login","useState","username","password","userFormData","setUserFormData","validated","loginUser","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","login","Form","noValidate","onSubmit","Group","Label","Control","placeholder","onChange","required","Matchup","formState","setFormState","queryplayer1","fullName","queryplayer2","createMatchup","handleChange","player","Signup","addProfile","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3861ea5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <h5>Created by: </h5>\n      <ul>\n        <a href=\"https://github.com/JackWarrick\">Jack Warrick</a>\n        <a href=\"https://github.com/CarlBergquist\">Carl Bergquist</a>\n        <a href=\"https://github.com/cooper2016\">Harrison Cooper</a>\n      </ul>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Footer from \"../components/footer\";\n//import profilepic from '../../assets/me.jpeg';\n//import \"../../styles/about.css\"\nimport { Link } from 'react-router-dom'\n\nexport default function Init() {\n\n    return (\n        <div className=\"m-2\">\n            <h1 className=\"display-1 d-flex justify-content-center\">Fantasy Football Matchup Analyzer</h1>\n            <div className=\"d-flex justify-content-center\">\n            <Link to='/login'className=\"m-2\" ><button className=\"btn btn-primary\">Login</button></ Link>\n            <Link to='/signup'className=\"m-2\"><button className=\"btn btn-primary\">Sign Up</button></Link>\n            </div>\n            <img src=\"https://static.www.nfl.com/image/private/t_q-best/league/pyzxubxdovaubclvbvf0\" className=\"img-fluid max-width: 40% height: auto\"></img>\n            <Footer />\n        </div>\n    );\n\n}\n","import decode from 'jwt-decode';\n\n\nclass AuthService {\n  \n  \n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    //window.location.assign('/main');\n    \n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    //window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import { gql } from \"@apollo/client\";\n\n//NEEDS HELP - Looking at our models - need to find player by full_name and return the _id to the matchups database in order for anything to get rendered\n\nexport const QUERY_PLAYERS = gql`\n  query player {\n    player {\n      _id\n      player_id\n      full_name\n      position\n      team\n      imageUrl\n    }\n  }\n`;\n\nexport const QUERY_PLAYER = gql`\nquery Player($fullName: String!) {\n  player(full_name: $fullName) {\n    _id\n  }\n}\n`;\n\nexport const QUERY_MATCHUPS = gql`\n  query matchups {\n    matchups {\n      player1 {\n        full_name\n        player_id\n        position\n        team\n        _id\n        imageUrl\n      }\n      _id\n      player2 {\n        full_name\n        _id\n        player_id\n        position\n        team\n        imageUrl\n      }\n      player1_votes\n      player2_votes\n    }\n  }\n`;\n","import Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport Auth from '../utils/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavComponent() {\n  const navigate = useNavigate();\n  return (\n    <>\n      <Navbar key=\"lg\" bg=\"light\" expand=\"lg\" className=\"mb-3 px-4\">\n        <Container fluid>\n          <Navbar.Brand onClick={() => {\n                    navigate('/main');\n                  }}>Matchup Analyzer</Navbar.Brand>\n          <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-lg`} />\n          <Navbar.Offcanvas\n            id={`offcanvasNavbar-expand-lg`}\n            aria-labelledby={`offcanvasNavbarLabel-expand-lg`}\n            placement=\"end\"\n          >\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand-lg`}>\n                Account\n              </Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                <Nav.Link onClick={() => {\n                    navigate('/matchup');\n                  }}>Create Matchup</Nav.Link>\n                <NavDropdown\n                  title=\"Account\"\n                  id={`offcanvasNavbarDropdown-expand-sm`}\n                >\n                  <NavDropdown.Item onClick={() => {\n                    navigate('/account');\n                  }}>\n                    My Matchups\n                  </NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={() => {\n                    Auth.logout();\n                    navigate('/');\n                  }}>Logout</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            </Offcanvas.Body>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default NavComponent;\n","import { gql } from \"@apollo/client\";\n\n//NEEDS HELP - Need to make sure our CREATE_MATCHUP and CREATE_VOTE are targetting the correct fields, are working so the matchup is created properly, and the players that are entered in matchup.js connect to the players database by their full_name - may need a createdBy field as well so the person who created it shows up too\n\nexport const CREATE_MATCHUP = gql`\n  mutation createMatchup($player1: String!, $player2: String!) {\n    createMatchup(player1: $player1, player2: $player2) {\n      _id\n      player1 {\n        full_name\n      }\n      player2 {\n        full_name\n      }\n    }\n  }\n`;\n\n//Not sure on the $playerNum part\nexport const CREATE_VOTE = gql`\n  mutation createVote($_id: String, $playNum: Int!) {\n    createVote(_id: $_id, playNum: $playNum) {\n      _id\n      player1_votes\n      player2_votes\n    }\n  }\n`;\n\nexport const ADD_PROFILE = gql`\n  mutation addProfile($username: String!, $password: String!) {\n    addProfile(username: $username, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const REMOVE_MATCHUP = gql`\n  mutation removeMatchup($_id: String) {\n    removeMatchup(_id: $_id) {\n      _id\n    }\n  }\n`;\n","import { useParams, Link } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_MATCHUPS } from \"../utils/queries\";\nimport NavComponent from \"../components/nav\";\nimport { CREATE_VOTE } from \"../utils/mutations\";\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom'\n\n// NEEDS HELP - We need to be able to vote on the players and after the vote, the options need to be taken away - The vote needs to go the database as a vote and show up on the page\n\n//This was pulled from the week 21 mini project\nconst Main = () => {\n  let navigate = useNavigate();\n  let { id } = useParams();\n  const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    variables: { _id: id },\n  });\n  console.log(data);\n\n  //This was pulled from week 21 mini project - will not be exactl what we use to insert the data\n  const matchupList = data?.matchups || [];\n  console.log(matchupList);\n\n  //NEW STUFF\n  //   const [formState, setFormState] = useState({\n  //     player: '',\n  //     password: '',\n  // });\n\n  const [createVote, { error }] = useMutation(CREATE_VOTE, {\n    refetchQueries: QUERY_MATCHUPS,\n  });\n\n  const handleVote = async (id, playNum) => {\n    console.log(playNum);\n    console.log(id);\n\n    // const { name, value } = event.target;\n    //     setFormState({ ...formState, [name]: value });\n\n    try {\n      await createVote({\n        variables: { _id: id, playNum: playNum },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  //Need to pull data from player model, looking at what was made in the matchup model\n\n  //Need to add team and position - imageUrl is also a virtual that will be included\n  //   console.log(matchupList);\n  if (!Auth.loggedIn()) {\n    console.log(Auth.loggedIn);\n    return navigate(\"/\");\n  } else {\n    return (\n      <div className=\"container\">\n        <NavComponent />\n        <h1 className=\"display-2\">All Matchups</h1>\n        {matchupList.length > 0 ? (\n          matchupList.map((matchup) => {\n            return (\n              <div\n                key={matchup._id}\n                className=\"card bg-gray w-auto d-flex flex-row card-text-center m-2 text-center justify-content-center\"\n              >\n                <div className=\"d-flex flex-column m-2\">\n                  <img src={matchup.player1.imageUrl} alt={matchup.player1.full_name}></img>\n\n                  <h2 className=\"\">{matchup.player1.full_name}</h2>\n                  <h2>Team: {matchup.player1.team}</h2>\n                  <h2>Position: {matchup.player1.position}</h2>\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => handleVote(matchup._id, 1)}\n                  >\n                    Vote\n                  </button>\n                  <h3>Number of Votes: {matchup.player1_votes}</h3>\n                </div>\n\n                <div className=\"d-flex align-items-center m-4\">\n                  <h1>VS</h1>\n                </div>\n\n                <div className=\"d-flex flex-column m-2\">\n                  <img src={matchup.player2.imageUrl} alt={matchup.player2.full_name}></img>\n                  <h2>{matchup.player2.full_name}</h2>\n                  <h2>Team: {matchup.player2.team}</h2>\n                  <h2>Position: {matchup.player2.position}</h2>\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => handleVote(matchup._id, 2)}\n                  >\n                    Vote\n                  </button>\n                  <h3>Number of Votes: {matchup.player2_votes}</h3>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <h1>No Matchups Found</h1>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Main;\n","import { Link , useNavigate } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_MATCHUPS } from \"../utils/queries\";\nimport NavComponent from \"../components/nav\";\nimport Auth from \"../utils/auth\";\n//This was pulled from the week 21 mini project\nimport { REMOVE_MATCHUP } from \"../utils/mutations\";\n\n//NEEDS HELP - Need to be able to filter out all of the matchups for this users matchups based on createdBy - and display on the page - also be able to delete each matchup presented there - delete from the database so it doesn't show up on the main page our account page\n\nconst Account = () => {\n  const navigate = useNavigate();\n  const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    fetchPolicy: \"no-cache\",\n  });\n  //FOR NOW, to RENDER PAGE\n  const [removeMatchup, { error }] = useMutation(REMOVE_MATCHUP, {\n    refetchQueries: QUERY_MATCHUPS,\n  });\n\n  //This was pulled from week 21 mini project - will not be exactl what we use to insert the data\n\n  //FOR NOW, to RENDER PAGE\n  const myMatchupList = data?.matchups || [];\n\n  const handleDeleteMatchup = async (_id) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await removeMatchup({\n        variables: { _id: _id },\n      });\n\n      if (!response) {\n        throw new Error(\"something went wrong!\");\n      }\n      removeMatchup(_id);\n      navigate('/account');\n    } catch (err) {\n      console.error(error);\n    }\n  };\n  //I think we can use a similar method as the main.js to make a bunch of cards with matchups, but we just want this user's matchups\n\n  //THIS IS IMPORTANT FOR LATER\n\n  // const myMatchupList = matchupList.filter( createdBy.username == this.User)\n\n  if (!Auth.loggedIn()) {\n    console.log(Auth.loggedIn);\n    return navigate('/');\n  } else {\n    return (\n      <div className=\"container\">\n        <NavComponent />\n        <h1 className=\"display-2\">My Matchups</h1>\n        {myMatchupList.length > 0 ? (\n          myMatchupList.map((matchup) => {\n            return (\n              <div\n                key={matchup._id}\n                className=\"card bg-gray w-auto d-flex flex-row card-text-center m-2 text-center justify-content-center\"\n              >\n                <div className=\"d-flex flex-column m-2\">\n                  <img src={matchup.player1.imageUrl}></img>\n                  <h2>{matchup.player1.full_name}</h2>\n                  <h2>Team: {matchup.player1.team}</h2>\n                  <h2>Position: {matchup.player1.position}</h2>\n                  <h3>Number of Votes: {matchup.player1_votes}</h3>\n                </div>\n\n                <div className=\"d-flex align-items-center m-4\">\n                  <h1>VS</h1>\n                </div>\n\n                <div className=\"d-flex flex-column m-2\">\n                  <img src={matchup.player2.imageUrl}></img>\n                  <h2>{matchup.player2.full_name}</h2>\n                  <h2>Team: {matchup.player2.team}</h2>\n                  <h2>Position: {matchup.player2.position}</h2>\n                  <h3>Number of Votes: {matchup.player2_votes}</h3>\n                </div>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger m-2\"\n                  onClick={() => handleDeleteMatchup(matchup._id)}\n                >\n                  Delete\n                </button>\n              </div>\n            );\n          })\n        ) : (\n          <h1>No Matchups Found</h1>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Account;\n","import React , { useState } from 'react';\n//import profilepic from '../../assets/me.jpeg';\n//import \"../../styles/about.css\"\nimport Auth from '../utils/auth';\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\n\nexport default function Login() {\n    const [userFormData, setUserFormData] = useState({ username: '', password: '' });\n    const [validated] = useState(false);\n    //const [showAlert, setShowAlert] = useState(false);\n    const navigate = useNavigate();\n    \n    const [loginUser, { error }] = useMutation(LOGIN_USER);\n  \n    const handleInputChange = (event) => {\n      const { name, value } = event.target;\n      setUserFormData({ ...userFormData, [name]: value });\n    };\n  \n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n  \n      try {\n        const { data } = await loginUser({\n          variables: { ...userFormData },\n        });\n  \n        Auth.login(data.login.token);\n        navigate('/main')\n      } catch (e) {\n        console.error(e);\n      }\n  \n      setUserFormData({\n        username: '',\n        password: ''\n      });\n    };\n      \n        return (\n            <>\n          <div className=\"App\">\n            <div className=\"container\">\n              <div className=\"row d-flex justify-content-center\">\n              <div className=\"bg-secondary text-light\">\n                <h1 className=\"display-1\">LOG IN</h1>\n                </div>\n                <div className=\"col-md-4 m-2\">\n                  <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n                    <Form.Group>\n                      <Form.Label>Username:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Enter Username\"\n                        onChange={handleInputChange}\n                        value={userFormData.username}\n                        required\n                      />\n\n                    </Form.Group>\n                    <div className=\"form-group\">\n                      <label>Password:</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={userFormData.password}\n                        onChange={handleInputChange}\n                        required\n                      />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary m-2\" >\n                      Login\n                    </button>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n          </>\n        );\n      }\n    ","import React, { useState } from 'react';\nimport NavComponent from '../components/nav';\nimport Auth from '../utils/auth';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { CREATE_MATCHUP } from '../utils/mutations';\nimport { QUERY_MATCHUPS, QUERY_PLAYER } from \"../utils/queries\";\nimport { useNavigate } from 'react-router-dom'\n\n//NEED HELP: When we type in player names and enter, it collects the data in the console.log, but we need that data to be matched up with the corresponding players that are in our players database, and then we need to transfer that into our matchups database so it can be displayed on the main page - we also need the createdBy to be linked to this user that just created the matchup - see account.js for another question\nexport default function Matchup() {\n    const navigate = useNavigate()\n    const [formState, setFormState] = useState({\n        player1: '',\n        player2: '',\n    });\n    const queryplayer1 = useQuery(QUERY_PLAYER, {\n        variables: {fullName: formState.player1},\n      });\n      const queryplayer2 = useQuery(QUERY_PLAYER, {\n        variables: {fullName: formState.player2},\n      });\n    const [createMatchup, { error }] = useMutation(CREATE_MATCHUP, {\n        refetchQueries: QUERY_MATCHUPS\n    });\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({ ...formState, [name]: value });\n\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState.player1);\n       \n         formState.player1 =  queryplayer1.data.player._id\n         formState.player2 =  queryplayer2.data.player._id\n\n         navigate(\"/main\")\n        try {\n            const { data } = await createMatchup({\n                variables: { ...formState },\n                refetchQueries: QUERY_MATCHUPS\n            });\n            console.log(data)\n            \n            //Auth.login(data.addProfile.token);\n        } catch (e) {\n            console.error(e);\n        }\n        setFormState({\n            player1: '',\n            player2: '',\n        });\n\n    };\n    if (!Auth.loggedIn()) {\n        console.log(Auth.loggedIn)\n        return navigate('/');\n\n    } else {\n        return (\n            <div className=\"container\">\n                <NavComponent />\n                <div className=\"card w-200 d-flex align-items-center\">\n\n                    <div className=\"text-center m-4 border border-secondary bg-secondary text-light\">\n                        <h1 className=\"m-1 display-2\">CREATE YOUR MATCHUP</h1>\n                    </div>\n                    <form onSubmit={handleFormSubmit}>\n                        <div className=\"text-center m-4\">\n                            <h1>Enter Player 1 </h1>\n                            <input\n                            className=\"input-group input-group-lg\"\n                                name=\"player1\"\n                                type=\"text\"\n                                placeholder='Enter player 1 name'\n                                value={formState.player1}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n\n                        <div className=\"text-center m-4\">\n                            <h1 className=''>VS </h1>\n                        </div>\n\n\n                        <div className=\" text-center m-4\">\n                            <h1>Enter Player 2</h1>\n                            <input\n                            className=\"input-group input-group-lg\"\n                                name=\"player2\"\n                                type=\"text\"\n                                placeholder='Enter player 2 name'\n                                value={formState.player2}\n                                onChange={handleChange} \n                                />\n                        </div>\n\n                        <div className=\"text-center m-4\">\n                            <button className=\"btn btn-success\">SUBMIT</button>\n                        </div>\n                    </form>\n\n                    <div>\n\n\n                    </div>\n\n\n                </div>\n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_PROFILE } from '../utils/mutations';\nimport { useNavigate } from 'react-router-dom'\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n    const [formState, setFormState] = useState({\n        username: '',\n        password: '',\n    });\n    const navigate = useNavigate();\n    const [addProfile, { error }] = useMutation(ADD_PROFILE);\n\n    // update state based on form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({ ...formState, [name]: value });\n\n    };\n\n    // submit form\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        try {\n            const { data } = await addProfile({\n                variables: { ...formState },\n            });\n\n            Auth.login(data.addProfile.token);\n            navigate('/main')\n        } catch (e) {\n            console.error(e);\n        }\n        setFormState({\n            username: '',\n            password: '',\n          });\n\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-center\">\n                <div className=\"bg-secondary text-light\">\n                <h1 className=\"display-1\">SIGN UP</h1>\n                </div>\n                    <div className=\"col-md-4 m-2\">\n                        \n                            <form onSubmit={handleFormSubmit}>\n                                <div className=\"form-input\">\n                                    <label>Username</label>\n                                    <input\n                                        className=\"form-control\"\n                                        name=\"username\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Username\"\n                                        value={formState.username}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name='password'\n                                        placeholder=\"Password\"\n                                        value={formState.password}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary m-2\">\n                                    Sign Up\n                                </button>\n                            </form>\n                    \n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Signup;","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Init from \"./pages/initial\";\nimport Main from \"./pages/main\";\nimport Account from \"./pages/account\";\nimport Login from \"./pages/login\";\nimport Matchup from \"./pages/matchup\";\nimport Signup from \"./pages/signup\";\nimport \"./App.css\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Routes>\n            <Route path=\"/\" element={<Init />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/main\" element={<Main />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/matchup\" element={<Matchup />} />\n          </Routes>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}